from pgmpy.models import BayesianModel
from pgmpy.factors.discrete import TabularCPD
from pgmpy.inference import VariableElimination

# Define the Bayesian network structure
model = BayesianModel([('A', 'C'), ('B', 'C'), ('C', 'D'), ('C', 'E')])

# Define the conditional probability distributions (CPDs)
cpd_a = TabularCPD(variable='A', variable_card=2, values=[[0.6], [0.4]])
cpd_b = TabularCPD(variable='B', variable_card=2, values=[[0.7], [0.3]])
cpd_c = TabularCPD(variable='C', variable_card=2,
                   values=[[0.1, 0.2, 0.3, 0.4],
                           [0.9, 0.8, 0.7, 0.6]],
                   evidence=['A', 'B'],
                   evidence_card=[2, 2])
cpd_d = TabularCPD(variable='D', variable_card=2,
                   values=[[0.5, 0.9], [0.5, 0.1]],
                   evidence=['C'],
                   evidence_card=[2])
cpd_e = TabularCPD(variable='E', variable_card=2,
                   values=[[0.3, 0.7], [0.7, 0.3]],
                   evidence=['C'],
                   evidence_card=[2])

# Add CPDs to the model
model.add_cpds(cpd_a, cpd_b, cpd_c, cpd_d, cpd_e)

# Create the inference object
inference = VariableElimination(model)

# Perform approximate inference
query = inference.query(variables=['D'], evidence={'A': 1})
print(query['D'])
